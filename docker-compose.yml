version: "3"
services:
    nginx:
      image: nginx:1.19
      volumes:
        - ./nginx.conf:/tmp/nginx.conf
        - ./output/nginx/log:/var/log/nginx
      ports:
        - ${EXPOSE_PORT}:80
      env_file:
        - nginx.env
      command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

    table-view:
      image: inraep2m2/table-view-discovery:0.0.2
      volumes:
        - ./endpoints.js:/usr/local/apache2/htdocs/endpoints.js

    metaboref_virtuoso:
      image: tenforce/virtuoso:virtuoso7.2.5
      container_name: metaboref_virtuoso
      environment:
          VIRT_Parameters_NumberOfBuffers: 340000   # See virtuoso/README.md to adapt value of this line
          VIRT_Parameters_MaxDirtyBuffers: 250000    # See virtuoso/README.md to adapt value of this line
          VIRT_Parameters_TN_MAX_memory: 4000000000
          VIRT_SPARQL_ResultSetMaxRows: 100000000
          VIRT_SPARQL_MaxDataSourceSize: 1000000000
          VIRT_Flags_TN_MAX_memory: 4000000000
          VIRT_Parameters_StopCompilerWhenXOverRunTime: 1
          VIRT_SPARQL_MaxQueryCostEstimationTime: 0       # query time estimation
          VIRT_SPARQL_MaxQueryExecutionTime: 300          # 5 min
          VIRT_Parameters_MaxMemPoolSize: 800000000
          VIRT_Database_LockFile: virtuoso.lck
          LOGIN_PASSWORD: ${LOGIN_VIRTUOSO}
          DBA_PASSWORD: ${PASSWORD_VIRTUOSO}
          SPARQL_UPDATE: "true"
          DEFAULT_GRAPH: "http://p2m2.metabohub.org/graph"
      volumes:
          - ./virtuoso_data:/data
          - ./metaboref_data:/usr/local/virtuoso-opensource/share/virtuoso/vad/dumps
      ports:
          - 8890:8890
      command: >
        bash -c '
        bash /virtuoso.sh & sleep 6 &&
        until [ -f "/usr/local/virtuoso-opensource/share/virtuoso/vad/dumps/load_metaboref.sh" ] ; do
              echo "Waiting Metaboref turtle file - sleeping"
              sleep 5
        done &&
        bash /usr/local/virtuoso-opensource/share/virtuoso/vad/dumps/load_metaboref.sh &&
        wait'

    metaboref:
      image: inraep2m2/metaboref:0.0.1
      container_name: metaboref
      depends_on : [metaboref_virtuoso]
      volumes:
        - ./metaboref_data:/ttl

    selenium:
      build:
        context: .
        dockerfile: Dockerfile_modificationCorsVirtuoso
      environment:
          virtuoso_site: "http://localhost:8890/"
          login: ${LOGIN_VIRTUOSO}
          passwd: ${PASSWORD_VIRTUOSO}
      depends_on: [ chrome, metaboref_virtuoso ]
      networks:
        - selenium_net
      command: >
          bash -c '
            until `curl --output /dev/null --silent --head --fail http://localhost:8890/` ; do
              echo "Waiting Metaboref turtle file - sleeping" ;
              sleep 5 ;
            done && node virtuoso_cors.js'

    chrome:
      container_name: chrome
      image: selenium/standalone-chrome
      environment:
          START_XVFB: 'false'
      ports:
        - 4444:4444
      networks:
        - selenium_net

networks:
  selenium_net:
